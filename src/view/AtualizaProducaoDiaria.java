/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.FuncionarioDoLoteJpaController;
import controller.FuncionarioJpaController;
import controller.LoteJpaController;
import controller.ProducaoDiariaJpaController;
import java.awt.event.ItemEvent;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Funcionario;
import model.FuncionarioDoLote;
import model.Lote;
import model.ProducaoDiaria;
import model.ProducaoDiariaPK;
import model.Produto;
import model.ProdutoDoLote;

/**
 *
 * @author Maicon
 */
public class AtualizaProducaoDiaria extends javax.swing.JInternalFrame {

    /**
     * Creates new form ProducaoDiaria
     */
    private Lote glote;
    private Funcionario gfuncionario;
    private Produto gproduto;

    private List<ProdutoDoLote> produtos;
    private ProducaoDiariaPK pk;
    private ProducaoDiaria gpd;

    private FuncionarioJpaController jpaf;
    private FuncionarioDoLoteJpaController jpafl;
    private ProducaoDiariaJpaController jpapd;
    private LoteJpaController jpal;

    private final DefaultComboBoxModel cfunmod;
    private final DefaultComboBoxModel clotemod;
    private final DefaultComboBoxModel cprodmod;

    public AtualizaProducaoDiaria() {
        initComponents();

        cfunmod = (DefaultComboBoxModel) cfuncionario.getModel();
        clotemod = (DefaultComboBoxModel) clote.getModel();
        cprodmod = (DefaultComboBoxModel) cproduto.getModel();
        jpal = new LoteJpaController(ipsum2.Ipsum2.getFactory());
        jpapd = new ProducaoDiariaJpaController(ipsum2.Ipsum2.getFactory());
        jpafl = new FuncionarioDoLoteJpaController(ipsum2.Ipsum2.getFactory());
        loadFuncionarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        clote = new javax.swing.JComboBox();
        qtde = new javax.swing.JSlider();
        cproduto = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bsalvar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cfuncionario = new javax.swing.JComboBox();

        setClosable(true);
        setTitle("Produção Diária");

        jLabel1.setText("Lote");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cfuncionario, org.jdesktop.beansbinding.ELProperty.create("${selectedItem!=null}"), clote, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        clote.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cloteItemStateChanged(evt);
            }
        });

        qtde.setValue(0);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cproduto, org.jdesktop.beansbinding.ELProperty.create("${selectedItem!=null}"), qtde, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clote, org.jdesktop.beansbinding.ELProperty.create("${selectedItem != null}"), cproduto, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        cproduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cprodutoItemStateChanged(evt);
            }
        });

        jLabel2.setText("Produto");

        jLabel3.setText(" ");

        bsalvar.setText("Salvar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cproduto, org.jdesktop.beansbinding.ELProperty.create("${selectedItem!=null}"), bsalvar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        bsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalvarActionPerformed(evt);
            }
        });

        jLabel4.setText("Produzido:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qtde, org.jdesktop.beansbinding.ELProperty.create("${value}"), jLabel5, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Funcionário:");

        cfuncionario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cfuncionarioItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(qtde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bsalvar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clote, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(cproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cfuncionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cfuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cproduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bsalvar)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalvarActionPerformed
        Integer answer;
        answer = JOptionPane.showConfirmDialog(rootPane, "Confirma dados?");
        if (answer.equals(0)) {
            if (gpd == null) {
                try {
                    gpd = new ProducaoDiaria();
                    
                    gpd.setFuncionario((Funcionario)cfuncionario.getSelectedItem());
                    gpd.setLote((Lote) clote.getSelectedItem());
                    gpd.setProduto((Produto) cproduto.getSelectedItem());
                    gpd.setQtde(qtde.getValue());
                    gpd.setProducaoDiariaPK(pk);
                    
                    jpapd.create(gpd);
                } catch (Exception ex) {
                    Logger.getLogger(AtualizaProducaoDiaria.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                try {
                    gpd.setQtde(gpd.getQtde() + qtde.getValue());
                    
                    jpapd.edit(gpd);
                } catch (Exception ex) {
                    Logger.getLogger(AtualizaProducaoDiaria.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        loadProducao(gproduto);
    }//GEN-LAST:event_bsalvarActionPerformed

    private void cfuncionarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cfuncionarioItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            gfuncionario = (Funcionario) cfuncionario.getSelectedItem();
            loadLotesFuncionario(gfuncionario);

        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {

        }
    }//GEN-LAST:event_cfuncionarioItemStateChanged

    private void cloteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cloteItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            glote = (Lote) clote.getSelectedItem();

            loadProdutosLote(glote);
        }
    }//GEN-LAST:event_cloteItemStateChanged

    private void cprodutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cprodutoItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            gproduto = (Produto) cproduto.getSelectedItem();

            loadProducao(gproduto);
        }
    }//GEN-LAST:event_cprodutoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bsalvar;
    private javax.swing.JComboBox cfuncionario;
    private javax.swing.JComboBox clote;
    private javax.swing.JComboBox cproduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSlider qtde;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void loadFuncionarios() {
        if (jpaf == null) {
            jpaf = new FuncionarioJpaController(ipsum2.Ipsum2.getFactory());
        }

        List<Funcionario> lf = jpaf.getAll();

        for (Funcionario f : lf) {
            cfunmod.addElement(f);
        }

    }

    private void loadLotesFuncionario(Funcionario pf) {
        List<Lote> lotes = jpal.findLoteEntities();
        clotemod.removeAllElements();
        for (Lote l : lotes) {
            List<FuncionarioDoLote> fdl = l.getFuncionarioDoLoteList();
            for (FuncionarioDoLote x : fdl) {
                if (x.getFuncionario().equals(pf)) {
                    clotemod.addElement(x.getLote());
                }
            }
        }

    }

    private void loadProdutosLote(Lote nlote) {
        produtos = nlote.getProdutoDoLoteList();

        cprodmod.removeAllElements();
        for (ProdutoDoLote pl : produtos) {
            cprodmod.addElement(pl.getProduto());
        }
    }

    private void loadProducao(Produto nprod) {
        //definir maximo para produzir
        int max = 0;
        for (ProdutoDoLote p : produtos) {
            if (p.getProduto().equals(nprod)) {
                qtde.setMaximum(p.getQtde());
                max = p.getQtde();
            }
        }
        pk = new ProducaoDiariaPK();
        pk.setCodfunc(gfuncionario.getCodfunc());
        pk.setCodlote(glote.getCodlote());
        pk.setCodprod(gproduto.getCodprod());
        pk.setDataprod(new Date(2014, 10, 27));

        gpd = jpapd.findProducaoDiaria(pk);
        int v = 0;
        List<ProducaoDiaria> prods = jpapd.getEntityManager().createNamedQuery("ProducaoDiaria.findByCodlote").setParameter("codlote", glote.getCodlote()).getResultList();
        for (ProducaoDiaria pp : prods){
            v = v + pp.getQtde();
        }
        
        if (gpd != null) {
            qtde.setMaximum(max - v);
            qtde.setValue(0);
            
        } else {
            qtde.setMaximum(max - v);
            qtde.setValue(0);
        }

    }
}
