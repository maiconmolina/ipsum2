/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.LoteJpaController;
import controller.ProducaoDiariaJpaController;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.Lote;
import model.ProducaoDiaria;
import model.ProdutoDoLote;

/**
 *
 * @author Maicon
 */
public class ConsultaProducao extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConsultaProducao
     */
    private Lote lote;
    private ProducaoDiariaJpaController jpapd;
    public ConsultaProducao() {
        initComponents();
        jpapd = new ProducaoDiariaJpaController(ipsum2.Ipsum2.getFactory());
        loadLotes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lotes = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        producoes = new javax.swing.JTable();

        setClosable(true);
        setTitle("Consulta Produção");

        lotes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lotesItemStateChanged(evt);
            }
        });

        jLabel1.setText("Lote:");

        producoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Funcionário", "Produto", "Produzido", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(producoes);
        if (producoes.getColumnModel().getColumnCount() > 0) {
            producoes.getColumnModel().getColumn(2).setPreferredWidth(30);
            producoes.getColumnModel().getColumn(3).setPreferredWidth(30);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lotes, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lotesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lotesItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED){
            this.lote = (Lote) lotes.getSelectedItem();
            if (this.lote != null)
            loadProducao();
        }
    }//GEN-LAST:event_lotesItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox lotes;
    private javax.swing.JTable producoes;
    // End of variables declaration//GEN-END:variables

    private void loadLotes() {
        LoteJpaController jpal = new LoteJpaController(ipsum2.Ipsum2.getFactory());
        List<Lote> llotes = jpal.findLoteEntities();
        DefaultComboBoxModel model = (DefaultComboBoxModel) lotes.getModel();
        
        for (Lote l : llotes){
            model.addElement(l);
        }
        
    }

    private void loadProducao() {
        List<ProducaoDiaria> prods = jpapd.getEntityManager().createNamedQuery("ProducaoDiaria.findByCodlote").setParameter("codlote", lote.getCodlote()).getResultList();
        DefaultTableModel model = (DefaultTableModel) producoes.getModel();
        List<Object> dados = new ArrayList<>();
        
        int z;
        for (z = 0; z < model.getRowCount(); z++){
            model.removeRow(z);
        }
        
        
        for (ProducaoDiaria p : prods){
            dados.add(p.getFuncionario().getNome());
            dados.add(p.getProduto().getDescricao());
            dados.add(p.getQtde());
            for (ProdutoDoLote x : lote.getProdutoDoLoteList()){
                if (p.getProduto().equals(x.getProduto())){
                    dados.add(x.getQtde());
                }
            }
            
            model.addRow(dados.toArray());
            dados.clear();
        }
    }
}
